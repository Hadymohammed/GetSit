@using GetSit.Data.ViewModels
@model BookingVM

<link rel="stylesheet" href="./css/booking.css" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
<form asp-action="Index" asp-controller="Booking" method="post">
    <input hidden asp-for="FilterDate" />
    <div class="container">
        <div class="header">
            <div class="header-hall">
                <div class="hall-name">@Model.SelectedHall.Type.ToString()</div>
                <div>
                    <span>@Model.SelectedSpace.Country,</span>
                    <span>@Model.SelectedSpace.City,</span>
                    <span>@Model.SelectedSpace.Street</span>
                </div>
            </div>
            <div class="header-actions">
                <i class="fa-regular fa-heart color-red"></i>
            </div>
        </div>
        <!--slider-->
        <div class="slider-container">
            <div class="slider-card">
                <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                    <ol class="carousel-indicators">
                        @for (int i = 0; i < Model.SelectedHall.HallPhotos.Count(); i++)
                        {
                            @if (i == 0)
                            {
                                <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="active"></li>
                            }
                            else
                            {
                                <li data-target="#carouselExampleIndicators" data-slide-to="@i"></li>
                            }
                        }
                    </ol>
                    <div class="carousel-inner">
                        @{
                            var j = 0;

                                    @foreach (var photo in Model.SelectedHall.HallPhotos)
                            {
                                        @if (j++ == 0)
                                {
                                            <div class="carousel-item active">
                                                <img class="slider-image" src="@photo.Url" alt="@j slide">
                                            </div>
                                }
                                else
                                {
                                            <div class="carousel-item">
                                                <img class="slider-image" src="@photo.Url" alt="@j slide">
                                            </div>
                                }
                            }
                        }
                    </div>
                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
        </div>
        <!--Main-->
        <div class="hall-booking-main">
            <!--SpaceInfo-->
            <div class="hall-booking-main-left">
                <!--Space-->
                <div class="space">
                    <div class="space-image">
                        <img class="avatar-md" src="@Model.SelectedSpace.SpaceLogo" />
                    </div>
                    <div class="space-details">
                        <div class="space-name">@Model.SelectedSpace.Name</div>
                        <div class="space-info">
                            <div>@Model.SelectedSpace.Name Host since @DateTime.Now.ToString("D")</div>
                        </div>
                    </div>
                </div>
                <hr />
                <!--Space-bio-->
                <div class="space-bio">
                    <h3 class="card-header-title">About this space</h3>
                    <div class="bio">@Model.SelectedSpace.Bio</div>
                </div>
                <!-- facilities-->
                @if (Model.SelectedHall.HallFacilities.Capacity != 0)
                {
                    <hr>
                    <div>
                        <h3 class="card-header-title">Hall Facilities </h3>
                        @foreach (var facility in Model.SelectedHall.HallFacilities)
                        {
                            <button class="pill-btn">&nbsp; @facility.Facility</button>
                        }
                        <br />
                    </div>
                }

                <hr />
                <!--Services-->
                <div class="sec-box">
                    <h2 class="card-header-title">Space Services </h2>
                    <div class="services-contanier">
                        <!-- amenities card starts -->
                        @foreach (var service in Model.SelectedSpace.Services)
                        {
                            <div class="product-card">
                                <div class="product-content">
                                    <div class="product-photo">
                                        <img src="@service.ServicePhotos.First().Url" alt="Product Photo">
                                    </div>
                                    <div class="product-details">
                                        <h3 class="product-name">@service.Name</h3>
                                        <p class="product-description">@service.Description</p>
                                        <p class="product-price">Price: @service.Price.ToString("N2")</p>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- amenities card ends -->

                    </div>
                </div>

                <hr />
                <!--Working Times-->
                <div class="Working-times">
                    <h2 class="card-header-title"> Working Times </h2>
                    <div class="grid-wdays">
                        @foreach (var day in Model.SelectedSpace.WorkingDays)
                        {
                            <div>
                                <p><b>@day.Day</b></p>
                                <p>
                                    @{
                                        var start = new DateTime(day.OpeningTime.Ticks).ToString("hh:mm tt");
                                    }
                                    @start
                                    -
                                    @{
                                        var end = new DateTime(day.ClosingTime.Ticks).ToString("hh:mm tt");
                                    }
                                    @end
                                </p>
                            </div>
                        }
                    </div>
                </div>
                <hr />
                <!--Schedule-->
                <h3 class="card-header-title">Booking schedule : <span>@Model.SlotsForWeek[0].Keys.First().ToString("D")</span></h3>
                <div class="schedule-container">
                    <table class="schedule">
                        <thead>
                            <tr>
                                <th></th>
                                @foreach (var day in Model.SlotsForWeek)
                                {
                                    <th>
                                        <div>
                                            <p>@day.Keys.First().DayOfWeek.ToString()</p>
                                            <p>@day.Keys.First().Day</p>
                                        </div>
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Generate rows for each time slot (15-minute intervals) -->
                            <!-- Example: 16 rows for a 4-hour schedule (08:00 AM to 12:00 PM) -->
                            @for (var slotIdx = 32; slotIdx < 96; slotIdx++)
                            {
                                <tr>
                                    <td class="time-span-schedule">
                                        @{
                                            var span = new DateTime(Model.SlotsForWeek[0].Values.First()[slotIdx].Item1.Ticks).ToString("hh:mm tt");
                                        }
                                        <div>@span</div>
                                    </td>
                                    @for (var dayIdx = 0; dayIdx < 7; dayIdx++)
                                    {
                                        @if (@Model.SlotsForWeek[dayIdx].Values.First()[slotIdx].Item2 == true)
                                        {
                                            <td></td>
                                        }
                                        else
                                        {
                                            <td class="booking"></td>
                                        }
                                    }
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
            <!--Booking-->
            <div class="hall-booking-main-right">
                <div class="booking-form">
                    <div class="form-container">

                        <input id="hallId" hidden asp-for="HallId" readonly />

                        <h3>@Model.SelectedHall.Type :  $<span id="hall-cost">@Model.SelectedHall.CostPerHour</span> /hr  </h3>
                        <span asp-validation-for="@Model.DesiredDate" class="text-danger"></span>

                        <input type="date" asp-for="DesiredDate" class="p-date-picker" id="date-input">
                        <a id="date-filter" asp-action="Index" asp-route-date="@DateTime.Now" asp-route-HallID="@Model.SelectedHall.Id">Check Date Availability</a>
                        <!--Select start & end time-->
                        <div class="select-time">
                            <div class="select-wrapper">
                                @if (ViewData.ModelState.IsValid)
                                {
                                    <span>@Model.StartTime</span>
                                    <label class="select-label select-start-label" for="start-time">Start Time</label>
                                }
                                else
                                {
                                    <label class="select-label select-start-label top-label" for="start-time">Start Time</label>
                                }
                                <div class="select-container select-start">
                                    <input type="text" id="start-time" class="select-input" asp-for="StartTime" readonly>
                                    <span class="material-symbols-outlined">schedule</span>
                                    <ul class="select-options select-start-options" id="#starts">
                                        @{
                                            var k = 0;
                                        }
                                        @foreach (var span in Model.SlotsForWeek[0].Values.First())
                                        {
                                            @if (span.Item2)
                                            {
                                                var spanString = new DateTime(span.Item1.Ticks).ToString("hh:mm tt");
                                                <li index="@k">@spanString</li>
                                            }
                                            k++;

                                        }

                                    </ul>
                                </div>
                            </div>

                            <div class="select-wrapper">
                                @if (ViewData.ModelState.IsValid)
                                {
                                    <span>@Model.EndTime</span>
                                    <label class="select-label select-end-label" for="end-time">End Time</label>
                                }
                                else
                                {
                                    <label class="select-label select-end-label top-label" for="end-time">End Time</label>
                                }
                                <div class="select-container select-end disabled">
                                    <input type="text" id="end-time" class="select-input" asp-for="EndTime" readonly>
                                    <span class="material-symbols-outlined">schedule</span>
                                    <ul class="select-options select-end-options" id="ends">

                                        @foreach (var span in Model.SlotsForWeek[0].Values.First())
                                        {
                                            var spanString = new DateTime(span.Item1.Ticks).ToString("hh:mm tt");
                                            @if (span.Item2)
                                            {
                                                <li>@spanString</li>
                                            }
                                            else
                                            {
                                                <li class="none" invalid>@spanString</li>
                                            }
                                        }

                                    </ul>
                                </div>
                            </div>
                        </div>

                        <!--Add services to booking -->
                        <div class="btn-group ">
                            <button class="btn btn-secondary dropdown-toggle emen-btn" type="button"
                                    id="dropdownMenuClickableInside" data-bs-toggle="dropdown" data-bs-auto-close="outside"
                                    aria-expanded="false">
                                Select Service
                            </button>
                            <ul class="dropdown-menu amn-dropdown-list" aria-labelledby="dropdownMenuClickableInside">

                                @foreach (var service in @Model.SelectedSpace.Services)
                                {
                                    <li>
                                        <div class="edit-list-item">
                                            <span class="con-list-item service-name">@service.Name</span>
                                            <span class="con-list-item ">$<span class="service-cost">@service.Price</span></span>
                                            <div class="counter-container">
                                                <button class="counter-btn decrement material-symbols-outlined hover-effect no-border-btn">
                                                    remove
                                                </button>
                                                <span class="counter-value">0</span>
                                                <button class="counter-btn increment material-symbols-outlined hover-effect no-border-btn">
                                                    add
                                                </button>
                                            </div>
                                            @* Hidden input field to store the service ID and quantity data *@
                                            <input type="hidden" index="@service.Id" id="SelectedServicesQuantities_@service.Id" name="SelectedServicesQuantities[@service.Id]" class="service-quant" value="0" />
                                        </div>
                                    </li>
                                }


                            </ul>
                        </div>
                        <!--receipt-->
                        <div class="receipt-container none">
                            <h3>Receipt details</h3>
                            <table>
                                <thead>
                                <th>Detail Name</th>
                                <th>Unit Cost</th>
                                <th>Qt</th>
                                <th>Cost</th>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                            <hr />
                            <div class="receipt-total">
                                <h4>Total : </h4>
                                <div></div>
                            </div>
                        </div>
                        <!-- Button trigger modal -->
                        <button type="button" class="purple-btn" style="margin: 10px;" data-toggle="modal" data-target="#confirmUploadModal">
                            Book Now
                        </button>

                    </div>
                </div>
            </div>
        </div>
        <!--Confirmation Modal-->
        <div class="modal fade" id="confirmUploadModal" tabindex="-1" role="dialog" aria-labelledby="confirmUploadModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="confirmUploadModalLabel">Confirmation</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to place this booking?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Book</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
@section Scripts
    {
    <script>
        $(document).ready(setupSelectDate);
        $(document).ready(setupSelectStartTime);
        $(document).ready(setupSelectEndTime);
        $(document).ready(setupDropDownService);


        function setupSelectDate() {
            //Date default Value
            var date = new Date($("#FilterDate").val());
            date.setDate(date.getDate() + 1);
            var formattedDate = date.toISOString().split('T')[0];
            $('#date-input').val(formattedDate);

            $('#date-input').on('change', () => {
                var date = $('#date-input').val();
                var hallId = $("#hallId").val();
                $('#date-filter').attr('href', `/Booking?date=${date}&HallID=${hallId}`);



            })
        }

        function setupSelectStartTime() {
            $('.select-start').on('click', function () {
                $(this).find('.select-options').toggle();
            });

            $('.select-start-options li').on('click', function () {
                var selectedOption = $(this).text();
                var selectedSpanIdx = $(this).attr("index");
                $('#start-time').val(selectedOption);
                $('#starts').hide();
                $('.select-start-label').addClass('top-label');
                /*Update valid end spans*/
                var notValid = 0;
                $('.select-end-options li').each((index, element) => {
                    if (index <= selectedSpanIdx)
                        $(element).addClass("none");
                    else {
                        var attr = $(element).attr('invalid');
                        if (typeof attr !== typeof undefined && attr !== false) {
                            notValid++;
                            if (notValid == 1)
                                $(element).removeClass("none");
                        }
                        else {
                            $(element).removeClass("none");
                        }
                    }
                    if (notValid > 1)
                        $(element).addClass("none");
                })
                // Enable the end-time selection
                $('.select-end').removeClass('disabled');
            });

            $('#start-time').on('focus', function () {
                $('.select-start-label').addClass('top-label');
            }).on('blur', function () {
                if ($(this).val() === '') {
                    $('.select-start-label').removeClass('top-label');

                    // Disable the end-time selection
                    $('.select-end').addClass('disabled');
                    $('#end-time').val('');
                    $('.select-end-label').removeClass('top-label');
                }
            });

            $(document).on('click', function (event) {
                if (!$(event.target).closest('.select-wrapper').length) {
                    $('.select-options').hide();
                    if ($('#start-time').val() === '') {
                        $('.select-start-label').removeClass('top-label');

                        // Disable the end-time selection
                        $('.select-end').addClass('disabled');
                        $('#end-time').val('');
                        $('.select-end-label').removeClass('top-label');
                    }
                }
            });
        }

        function setupSelectEndTime() {
            $('.select-end').on('click', function (e) {
                if ($('#start-time').val() === '') return;
                $(this).find('.select-options').toggle();
            });

            $('.select-end-options li').on('click', function () {
                var selectedOption = $(this).text();
                $('#end-time').val(selectedOption);
                $('#ends').hide();
                $('.select-end-label').addClass('top-label');
                updateReceipt();
            });

            $('#end-time').on('focus', function () {
                if ($('#start-time').val() === '') return;
                $('.select-end-label').addClass('top-label');
            }).on('blur', function () {
                if ($(this).val() === '') {
                    $('.select-end-label').removeClass('top-label');
                }
            });

            $(document).on('click', function (event) {
                if (!$(event.target).closest('.select-wrapper').length) {
                    $('.select-options').hide();
                    if ($('#end-time').val() === '') {
                        $('.select-end-label').removeClass('top-label');
                    }
                    else {
                        updateReceipt();
                    }
                }
            });
        }

        function setupDropDownService() {
            var $dropdown = $(".dropdown-menu");

            $dropdown.on("click", ".counter-btn", function (e) {
                e.preventDefault();
                var $counterContainer = $(this).closest(".counter-container");
                var $counterValue = $counterContainer.find(".counter-value");
                var currentValue = parseInt($counterValue.text()) || 0;
                var increment = $(this).hasClass("increment") ? 1 : -1;

                var newValue = currentValue + increment;
                if (newValue < 0) {
                    newValue = 0;
                }

                $counterValue.text(newValue);
                // Update the hidden input field with the selected quantity
                var $parent = $(this).closest(".edit-list-item");
                var serviceId = $parent.find(".service-quant").attr("index");
                $(`#SelectedServicesQuantities_${serviceId}`).val(newValue);
                updateReceipt();
                // Prevent dropdown from closing when clicking on the counter buttons
                e.stopPropagation();
            });
        }

        function updateReceipt() {
            var totalCost = 0;
            var box = $('.receipt-container');
            var table = box.find('table tbody');
            var startTime = $('#start-time').val();
            var startHour = parseInt(startTime.split(':')[0]);
            var startMinute = parseInt(startTime.split(':')[1].split(' ')[0]);
            var startMeridiem = startTime.split(' ')[1];

            if (startMeridiem === 'PM' && startHour !== 12) {
                startHour += 12;
            }

            var startTimeInMinutes = startHour * 60 + startMinute;

            var endTime = $('#end-time').val();
            var endHour = parseInt(endTime.split(':')[0]);
            var endMinute = parseInt(endTime.split(':')[1].split(' ')[0]);
            var endMeridiem = endTime.split(' ')[1];

            if (endMeridiem === 'PM' && endHour !== 12) {
                endHour += 12;
            }

            var endTimeInMinutes = endHour * 60 + endMinute;

            var totalMinutes = endTimeInMinutes - startTimeInMinutes;
            var totalHours = totalMinutes / 60;

            var hallName = $('.hall-name').text();
            var hallCost = parseFloat($('#hall-cost').text());

            var tableBody = $('.receipt-container table tbody');

            // Get the list of service items
            var serviceItems = $('.dropdown-menu .edit-list-item');

            // Clear the table body
            tableBody.empty();
            //update hall rent
            var newRow = $('<tr>').addClass('receipt-item');

            // Create table cells for each data
            var nameCell = $('<td>').addClass('receipt-item-name').text(hallName);
            var costCell = $('<td>').addClass('receipt-item-unit').text('$' + hallCost);
            var quantityCell = $('<td>').addClass('receipt-item-quantity').text(totalHours.toFixed(2) + " hours");
            var totalCostCell = $('<td>').addClass('receipt-item-cost').text('$' + (parseFloat(hallCost) * parseFloat(totalHours)).toFixed(2));
            totalCost = parseFloat(totalCost) + (parseFloat(hallCost) * parseFloat(totalHours)).toFixed(2);
            // Append cells to the row
            newRow.append(nameCell, costCell, quantityCell, totalCostCell);

            // Append the row to the table body
            tableBody.append(newRow);

            // Loop through each service item
            serviceItems.each(function () {
                // Get the service name, cost, and quantity
                var serviceName = $(this).find('.service-name').text();
                var serviceCost = $(this).find('.service-cost').text();
                var serviceQuantity = $(this).find('.counter-value').text();

                // Create a new table row
                if (serviceQuantity != '0') {
                    var newRow = $('<tr>').addClass('receipt-item');

                    // Create table cells for each data
                    var nameCell = $('<td>').addClass('receipt-item-name').text(serviceName);
                    var costCell = $('<td>').addClass('receipt-item-unit').text(serviceCost);
                    var quantityCell = $('<td>').addClass('receipt-item-quantity').text(serviceQuantity);
                    var totalCostCell = $('<td>').addClass('receipt-item-cost').text('$' + (parseFloat(serviceCost) * parseInt(serviceQuantity)).toFixed(2));
                    totalCost = parseFloat(totalCost) + (parseFloat(serviceCost) * parseInt(serviceQuantity));

                    // Append cells to the row
                    newRow.append(nameCell, costCell, quantityCell, totalCostCell);

                    // Append the row to the table body
                    tableBody.append(newRow);
                }
                //Add total cost
            });
                $('.receipt-total div').text('$' + parseFloat(totalCost).toFixed(2));
                box.removeClass("none");
        }
    </script>
}
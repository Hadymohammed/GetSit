@using GetSit.Data.ViewModels
@model BookingVM
<link rel="stylesheet" href="./css/booking.css"/>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
<div class="container">
    <div class="header">
        <div class="header-hall">
        <div class="hall-name">@Model.SelectedHall.Type.ToString()</div>
            <div>
                <span>@Model.SelectedSpace.Country,</span>
                <span>@Model.SelectedSpace.City,</span>
                <span>@Model.SelectedSpace.Street</span>
            </div>
        </div>
        <div class="header-actions">
            <i class="fa-regular fa-heart color-red"></i>
        </div>
    </div>
    <!--slider-->
    <div class="slider-container">
        <div class="slider-card">
            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                <ol class="carousel-indicators">
                    @for(int i=0;i<Model.SelectedHall.HallPhotos.Count();i++)
                        {
                            @if(i==0)
                            {
                                <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="active"></li>
                            }
                            else{
                                <li data-target="#carouselExampleIndicators" data-slide-to="@i"></li>
                            }
                        }
                </ol>
                <div class="carousel-inner">
                    @{
                        var j = 0;
                    }
                    @foreach (var photo in Model.SelectedHall.HallPhotos)
                    {
                        @if (j++ == 0)
                        {
                            <div class="carousel-item active">
                                <img class="d-block w-100" src="@photo.Url" alt="@j slide">
                            </div>
                        }
                        else
                        {
                            <div class="carousel-item">
                                <img class="d-block w-100" src="@photo.Url" alt="@j slide">
                            </div>
                        }
                    }
                </div>
                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
    </div>
    <!--Main-->
    <div class="hall-booking-main">
        <!--SpaceInfo-->
        <div class="hall-booking-main-left">
            <!--Space-->
            <div class="space">
                <div class="space-image">
                    <img class="avatar-md" src="@Model.SelectedSpace.Photos.FirstOrDefault().Url"/>
                </div>
                <div class="space-details">
                    <div class="space-name">@Model.SelectedSpace.Name</div>
                    <div class="space-info">
                        <div>@Model.SelectedSpace.Name Host since @DateTime.Now.ToString("D")</div>
                    </div>
                </div>
            </div>
            <hr />
            <!--Space-bio-->
            <div class="space-bio">
                <h3 class="card-header-title">About this space</h3>
                <div class="bio">@Model.SelectedSpace.Bio</div>
            </div>
             <!-- facilities-->
                @if (Model.SelectedHall.HallFacilities.Capacity != 0)
                {
                <hr>
                    <div>
                        <h3 class="card-header-title">Hall Facilities </h3>
                        @foreach (var facility in Model.SelectedHall.HallFacilities)
                        {
                            <button class="pill-btn">&nbsp; @facility.Facility</button>
                        }
                        <br />
                    </div>
                }

            <hr />
            <!--Services-->
            <div class="sec-box">
                <h2 class="card-header-title">Space Services </h2>
                <div class="services-contanier">
                    <!-- amenities card starts -->
                    @foreach (var service in Model.SelectedSpace.Services)
                    {
                        <div class="product-card">
                            <div class="product-content">
                                <div class="product-photo">
                                    <img src="@service.ServicePhotos.First().Url" alt="Product Photo">
                                </div>
                                <div class="product-details">
                                    <h3 class="product-name">@service.Name</h3>
                                    <p class="product-description">@service.Description</p>
                                    <p class="product-price">Price: @service.Price.ToString("N2")</p>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- amenities card ends -->

                </div>
            </div>

            <hr />
            <!--Working Times-->
            <div class="Working-times">
                <h2 class="card-header-title"> Working Times </h2>
                <div class="grid-wdays">
                    @foreach (var day in Model.SelectedSpace.WorkingDays)
                    {
                        <div>
                            <p><b>@day.Day</b></p>
                            <p>
                                @{
                                    var start = new DateTime(day.OpeningTime.Ticks).ToString("hh:mm tt");
                                }
                                @start
                                -
                                @{
                                    var end = new DateTime(day.ClosingTime.Ticks).ToString("hh:mm tt");
                                }
                                @end
                            </p>
                        </div>
                    }
                </div>
            </div>
            <hr />
            <!--Schedule-->
            <h3 class="card-header-title">Booking schedule : <span>@Model.SlotsForWeek[0].Keys.First().ToString("D")</span></h3>
            <div class="schedule-container">
                <table class="schedule">
                    <thead>
                        <tr>
                            <th></th>
                            @foreach (var day in Model.SlotsForWeek)
                            {
                                <th>
                                    <div>
                                        <p>@day.Keys.First().DayOfWeek.ToString()</p>
                                        <p>@day.Keys.First().Day</p>
                                    </div>
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Generate rows for each time slot (15-minute intervals) -->
                        <!-- Example: 16 rows for a 4-hour schedule (08:00 AM to 12:00 PM) -->
                        @for (var slotIdx = 32; slotIdx < 96; slotIdx++)
                        {
                            <tr>
                                <td class="time-span-schedule">
                                    @{
                                        var span = new DateTime(Model.SlotsForWeek[0].Values.First()[slotIdx].Item1.Ticks).ToString("hh:mm tt");
                                    }
                                    <div>@span</div>
                                </td>
                                @for (var dayIdx = 0; dayIdx < 7; dayIdx++)
                                {
                                    @if (@Model.SlotsForWeek[dayIdx].Values.First()[slotIdx].Item2 == true)
                                    {
                                        <td></td>
                                    }
                                    else
                                    {
                                        <td class="booking"></td>
                                    }
                                }
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
        <!--Booking-->
        <div class="hall-booking-main-right">
            <div class="booking">
                <div class="form-container">
                    <h1> $@Model.SelectedHall.CostPerHour /hr</h1>
                    <input type="date" asp-for="@Model.DesiredDate" class="p-date-picker">
                    <!--Select start & end time-->
                    <div class="select-time">
                    <div class="select-wrapper">
                        <label class="select-label select-start-label" for="start-time">Start Time</label>
                        <div class="select-container select-start">
                            <input type="text" id="start-time" class="select-input" readonly>
                            <span class="material-symbols-outlined">schedule</span>
                            <ul class="select-options select-start-options">
                                <li>8:00 AM</li>
                                <li>9:00 AM</li>
                                <li>10:00 AM</li>
                                <!-- Add more options as needed -->
                            </ul>
                        </div>
                    </div>
                        <div class="select-wrapper">
                            <label class="select-label select-end-label" for="end-time">End Time</label>
                            <div class="select-container select-end disabled">
                                <input type="text" id="end-time" class="select-input" readonly>
                                <span class="material-symbols-outlined">schedule</span>
                                <ul class="select-options select-end-options">
                                    <li>8:00 AM</li>
                                    <li>9:00 AM</li>
                                    <li>10:00 AM</li>
                                    <!-- Add more options as needed -->
                                </ul>
                            </div>
                        </div>
                    </div>

                    <!--Add services to booking -->
                    <div class="btn-group ">
                        <button class="btn btn-secondary dropdown-toggle emen-btn" type="button"
                                id="dropdownMenuClickableInside" data-bs-toggle="dropdown" data-bs-auto-close="outside"
                                aria-expanded="false">
                            Select Service
                        </button>
                        <ul class="dropdown-menu amn-dropdown-list" aria-labelledby="dropdownMenuClickableInside">
                           
                                @foreach (var service in @Model.SelectedSpace.Services)
                                {
                                    <li>
                                    <div class="edit-list-item">
                                        <span class="con-list-item">@service.Name</span>
                                        <div class="counter-container">
                                            <button class="counter-btn decrement material-symbols-outlined hover-effect no-border-btn">
                                                remove
                                            </button>
                                            <span class="counter-value">0</span>
                                            <button class="counter-btn increment material-symbols-outlined hover-effect no-border-btn">
                                                add
                                            </button>
                                        </div>
                                        @* Hidden input field to store the service ID and quantity data *@
                                        <input type="hidden" name="SelectedServices[@service.Id]" value="" />
                                    </div>
                                    </li>
                                }

                           
                        </ul>
                    </div>
                    <!-- Add services to booking ends -->

                    <!-- Button trigger modal -->
                    <button type="button" class="btn Book-Now-btn" data-bs-toggle="modal"
                            data-bs-target="#exampleModal">
                        Book Now
                    </button>
                </div>
            </div>
         </div>
    </div>
</div>

@section Scripts
    {
       <script>
            $(document).ready(setupSelectStartTime);
            $(document).ready(setupSelectEndTime);
            $(document).ready(setupDropDownService);

            $(document).on('show.bs.modal', '.modal', function () {
                $(this).appendTo('body');
            });

            function setupSelectStartTime() {
                $('.select-start').on('click', function () {
                    $(this).find('.select-options').toggle();
                });

                $('.select-start-options li').on('click', function () {
                    var selectedOption = $(this).text();
                    $('#start-time').val(selectedOption);
                    $('.select-start-options').hide();
                    $('.select-start-label').addClass('top-label');

                    // Enable the end-time selection
                    $('.select-end').removeClass('disabled');
                });

                $('#start-time').on('focus', function () {
                    $('.select-start-label').addClass('top-label');
                }).on('blur', function () {
                    if ($(this).val() === '') {
                        $('.select-start-label').removeClass('top-label');

                        // Disable the end-time selection
                        $('.select-end').addClass('disabled');
                        $('#end-time').val('');
                        $('.select-end-label').removeClass('top-label');
                    }
                });

                $(document).on('click', function (event) {
                    if (!$(event.target).closest('.select-wrapper').length) {
                        $('.select-options').hide();
                        if ($('#start-time').val() === '') {
                            $('.select-start-label').removeClass('top-label');

                            // Disable the end-time selection
                            $('.select-end').addClass('disabled');
                            $('#end-time').val('');
                            $('.select-end-label').removeClass('top-label');
                        }
                    }
                });
            }

            function setupSelectEndTime() {
                $('.select-end').on('click', function (e) {
                    if ($('#start-time').val() === '') return;
                    $(this).find('.select-options').toggle();
                });

                $('.select-end-options li').on('click', function () {
                    var selectedOption = $(this).text();
                    $('#end-time').val(selectedOption);
                    $('.select-end-options').hide();
                    $('.select-end-label').addClass('top-label');
                });

                $('#end-time').on('focus', function () {
                    if ($('#start-time').val() === '') return;
                    $('.select-end-label').addClass('top-label');
                }).on('blur', function () {
                    if ($(this).val() === '') {
                        $('.select-end-label').removeClass('top-label');
                    }
                });

                $(document).on('click', function (event) {
                    if (!$(event.target).closest('.select-wrapper').length) {
                        $('.select-options').hide();
                        if ($('#end-time').val() === '') {
                            $('.select-end-label').removeClass('top-label');
                        }
                    }
                });
            }
        function setupDropDownService() {
            var $dropdown = $(".dropdown-menu");

            $dropdown.on("click", ".counter-btn", function (e) {
                e.preventDefault();
                var $counterContainer = $(this).closest(".counter-container");
                var $counterValue = $counterContainer.find(".counter-value");
                var currentValue = parseInt($counterValue.text()) || 0;
                var increment = $(this).hasClass("increment") ? 1 : -1;

                var newValue = currentValue + increment;
                if (newValue < 0) {
                    newValue = 0;
                }

                $counterValue.text(newValue);

                // Update the hidden input field with the selected quantity
                var $parent = $(this).closest(".edit-list-item");
                var serviceId = $parent.data("service-id");
                var $hiddenInput = $parent.find("input[type=hidden]");
                $hiddenInput.attr("name", "SelectedServices[" + serviceId + "]");

                // Prevent dropdown from closing when clicking on the counter buttons
                e.stopPropagation();
            });
        }
    </script>

}
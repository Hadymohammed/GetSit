@using GetSit.Data.ViewModels
@using GetSit.Data.enums
@model BookingDetailsVM

<link href="~/css/bookingDetails.css" rel="stylesheet"/>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/js/bootstrap.bundle.min.js"></script>

<div class="booking-details-container">
    <div class="col-md-7 order-box box">
        <h3>Order : #Guest_@Model.Booking.Id <span class="order-date">@Model.BookingDate.ToString("dddd, dd MMMM yyyy") at @Model.BookingDate.ToString("hh:mm tt")</span></h3>
        <hr />
        <ul class="order-list">
            <li>
                <div class="product-card booking-hall fade-in">
                    <div class="product-content">
                        <div class="product-photo">
                            <img src=".@Model.HallDetail.BookingHall.Hall.HallPhotos.First().Url" alt="Item 2 Photo">
                        </div>
                        <div class="booking-details">
                            <div>
                                <h3 class="product-name">@Model.HallDetail.BookingHall.Hall.Type</h3>
                                @{
                                    var spanStart = new DateTime(Model.StartTime.Ticks).ToString("hh:mm tt");
                                    var spanEnd = new DateTime(Model.EndTime.Ticks).ToString("hh:mm tt");
                                }
                                <p>form @spanStart to @spanEnd</p>
                            </div>
                            <div class="booking-actions">
                                @if (Model.HallDetail.Status == PaymentStatus.Paid)
                                {
                                    <div class="booking-status paid">Paid</div>
                                }
                                else
                                {
                                    <div class="booking-status not-paid">Not Paid</div>
                                }
                                <div class="booking-cost">$@Model.HallDetail.TotalCost.ToString("N2")</div>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
            @foreach(var service in Model.servicesDetails)
            {
                <li>
                    <div class="product-card booking-hall fade-in">
                        <div class="product-content">
                            <div class="product-photo">
                                <img src=".@service.BookingHallService.Service.ServicePhotos.First().Url" alt="Item 2 Photo">
                            </div>
                            <div class="booking-details">
                                <div>
                                    <h3 class="product-name">@service.BookingHallService.Service.Name</h3>
                                    <p>Quantity: @service.BookingHallService.NumberOfUnits</p>
                                </div>
                                <div class="booking-actions">
                                    @if (service.Status == PaymentStatus.Paid)
                                    {
                                        <div class="booking-status paid">Paid</div>
                                    }
                                    else
                                    {
                                        <div class="booking-status not-paid">Not Paid</div>
                                    }
                                    <div class="booking-cost">$@Model.TotalCost.ToString("N2")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
            }
        </ul>
        <div style="display: flex;justify-content: flex-end;">
            <div>
                <div class="total-cost">
                    <div>Total : </div>
                    <p>$@Model.TotalCost.ToString("N2")</p>
                </div>
                <div class="total-cost">
                    <div>Paid : </div>
                    <p>@{
                            var paid = (float)Model.Paid;
                        }$@paid.ToString("N2")</p>
                </div>
                <hr/>
                <div class="total-cost">
                    <div>To pay : </div>
                    @{
                        float rest = Model.TotalCost - paid;
                    }
                    <p>$@rest.ToString("N2")</p>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 right-side">
        <div class="customer-box box">
            <h5>Customer details</h5>
            <div class="customer-card">
                <div class="customer-avatar">
                    <img src="../resources/site/user-profile-icon.jpg" alt="Customer Photo">
                </div>
                <div class="details">
                    <div class="name">@Model.FirstName @Model.LastName</div>
                    <div class="phone">Phone: @Model.PhoneNumber</div>
                </div>
            </div>
        </div>
        <div class="employee-box box">
            <h5>Employee details</h5>
            <div class="customer-card">
                <div class="customer-avatar">
                    <img src="../@Model.Employee.ProfilePictureUrl" alt="Employee Photo">
                </div>
                <div class="details">
                    <div class="name">@Model.Employee.FirstName @Model.Employee.LastName</div>
                    <div class="phone">Phone: @Model.Employee.PhoneNumber</div>
                </div>
            </div>
        </div>
    </div>
    <button type="button" class="add-item-btn" data-toggle="modal" data-target="#confirmUploadModal">Add Item to Order</button>
    <div class="modal fade" id="confirmUploadModal" tabindex="-1" role="dialog" aria-labelledby="confirmUploadModalLabel" aria-hidden="true ">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmUploadModalLabel">Add services</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @foreach (var service in @Model.SpaceServices)
                    {
                        <div>
                            <div class="edit-list-item">
                                <span class="con-list-item service-name">@service.Name</span>
                                <span class="con-list-item ">$<span class="service-cost">@service.Price</span></span>
                                <div class="counter-container">
                                    <button class="counter-btn decrement material-symbols-outlined hover-effect no-border-btn">
                                        remove
                                    </button>
                                    <span class="counter-value">0</span>
                                    <button class="counter-btn increment material-symbols-outlined hover-effect no-border-btn">
                                        add
                                    </button>
                                </div>
                                @* Hidden input field to store the service ID and quantity data *@
                                <input type="hidden" index="@service.Id" id="SelectedServicesQuantities_@service.Id" name="SelectedServicesQuantities[@service.Id]" class="service-quant" value="0" />
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Create</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>

        $(document).ready(function () {
            setupDropDownService();
        });
        $(document).ready(function () {
            // Add event listener to the button to open the modal
            $('.add-item-btn').click(function () {
                $('#confirmUploadModal').modal('show');
            });
        });


        function initAddItemModal() {
            const addButton = document.querySelector('.add-item-btn');

            // Get the modal element
            const modal = document.querySelector('.modal');

            // Get the close button element
            const closeButton = document.querySelector('.modal-close');

            // Add event listener to the button to open the modal
            addButton.addEventListener('click', function () {
                modal.style.display = 'block';
            });

            // Add event listener to the close button to close the modal
            closeButton.addEventListener('click', function () {
                modal.style.display = 'none';
            });

            // Close the modal if the user clicks outside the modal content
            window.addEventListener('click', function (event) {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        }

        function setupDropDownService() {
            var $dropdown = $(".dropdown-menu");

            $dropdown.on("click", ".counter-btn", function (e) {
                e.preventDefault();
                var $counterContainer = $(this).closest(".counter-container");
                var $counterValue = $counterContainer.find(".counter-value");
                var currentValue = parseInt($counterValue.text()) || 0;
                var increment = $(this).hasClass("increment") ? 1 : -1;

                var newValue = currentValue + increment;
                if (newValue < 0) {
                    newValue = 0;
                }

                $counterValue.text(newValue);
                // Update the hidden input field with the selected quantity
                var $parent = $(this).closest(".edit-list-item");
                var serviceId = $parent.find(".service-quant").attr("index");
                $(`#SelectedServicesQuantities_${serviceId}`).val(newValue);
                updateReceipt();
                // Prevent dropdown from closing when clicking on the counter buttons
                e.stopPropagation();
            });
        }
    </script>
}
@using GetSit.Data.ViewModels
@using GetSit.Data.enums
@model EditHallVM
<link rel="stylesheet" href="~/css/SpaceManagement.css" />
<div class="container">
    <div>
        <!--Space Data-->
        <div class="profile-card" style="top: 0px;">
            @{
                string url = "../" + Model.SpacePhotoUrl;
            }
            <img src="@url" />
            <div class="profile-name">@Model.SpaceName</div>
            <div class="profile-bio">
                @Model.SpaceBio
            </div>
        </div>
    </div>
    <h1>Edit hall</h1>
    <!--slider-->
    <div class="slider-container">
        <div class="slider-card">
            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                <ol class="carousel-indicators">
                    @for (int i = 0; i < Model.Hall.HallPhotos.Count(); i++)
                    {
                        @if (i == 0)
                        {
                            <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="active"></li>
                        }
                        else
                        {
                            <li data-target="#carouselExampleIndicators" data-slide-to="@i"></li>
                        }
                    }
                </ol>
                <div class="carousel-inner">
                    @{
                        var j = 0;

                        @foreach (var photo in Model.Hall.HallPhotos)
                        {
                            @if (j++ == 0)
                            {
                                <div class="carousel-item active">
                                    <img class="slider-image" src="../@photo.Url" alt="@j slide">
                                </div>
                            }
                            else
                            {
                                <div class="carousel-item">
                                    <img class="slider-image" src="../@photo.Url" alt="@j slide">
                                </div>
                            }
                        }
                    }
                </div>
                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
    </div>
    <form asp-action="EditHall" enctype="multipart/form-data">
        <input asp-for="@Model.SpaceName" hidden />
        <input asp-for="@Model.SpaceId" hidden />
        <input asp-for="@Model.SpaceBio" hidden />
        <input asp-for="@Model.SpacePhotoUrl" hidden />
        <div class="addHall-container">
            <div class="addHall-left-column">
                <!--Name & Bio-->
                <div class="addHall-main-card">
                    <div class="addHall-sub-card">
                        <h4>Main</h4>
                        <div class="form-group">
                            <label asp-for="Hall.Description"></label>
                            <textarea asp-for="Hall.Description" class="form-control" maxlength="200" style="height: 30vh;max-height: 100px;">
                    </textarea>
                                <span asp-validation-for="@Model.Hall.Description" class="text-danger"></span>
                        </div>
                        <!--Facilities-->
                        <div class="form-group">
                            <label>Facilities:</label>
                            @foreach (Facility facility in Enum.GetValues(typeof(Facility)))
                            {
                                <div class="form-check">
                                    <input type="checkbox" name="Facilities" class="form-check-input" value="@facility" @(Model.Hall.HallFacilities.Any(f => f.Facility == facility) ? "checked" : "")>
                                    <label for="Facilities" class="form-check-label">@facility</label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <!--Media Files-->
                <div class="addHall-main-card">
                    <div class="addHall-sub-card">
                        <div class="addHall-card-header">
                            <h4>Media</h4>
                            <button type="button" class="btn btn-primary mt-2" onclick="addFileInput()">Add File</button>
                        </div>
                        <div class="input-group mb-3">
                            <div id="fileInputs">
                                <div>
                                    <h5>Hall Photos</h5>
                                    <span asp-validation-for="@Model.Files" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="addHall-right-column">
                <div class="addHall-sub-card">
                    <div class="form-group">
                        <label asp-for="Hall.CostPerHour">Cost per Hour:</label>
                        <input type="text" asp-for="Hall.CostPerHour" class="form-control">
                        <span asp-validation-for="@Model.Hall.CostPerHour" class="text-danger"></span>
                    </div>
                </div>
                <div class="addHall-sub-card">
                    <div class="form-group">
                        <label asp-for="Hall.Capacity"></label>
                        <input type="text" asp-for="Hall.Capacity" class="form-control">
                        <span asp-validation-for="@Model.Hall.Capacity" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <div >Category: @Model.Hall.Type</div>
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#confirmUploadModal">Apply Changes</button>
        </div>
        <!--Confirmation Modal-->
        <div class="modal fade" id="confirmUploadModal" tabindex="-1" role="dialog" aria-labelledby="confirmUploadModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="confirmUploadModalLabel">Confirmation</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to edit this hall?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Update</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@section scripts {
    <script>
        function addFileInput() {
            var fileInputsContainer = document.getElementById('fileInputs');
            var newFileInput = document.createElement('div');
            newFileInput.classList.add('input-group', 'mt-2');
            newFileInput.innerHTML = `
                                <input type="file" name="Files" class="form-control" accept="image/png, image/png, image/jpeg"/>
                                <button type="button" class="btn btn-danger" onclick="removeFileInput(this)">Remove</button>
                            `;
            fileInputsContainer.appendChild(newFileInput);
        }

        function removeFileInput(button) {
            var fileInputContainer = button.parentNode;
            fileInputContainer.parentNode.removeChild(fileInputContainer);
        }
    </script>
}